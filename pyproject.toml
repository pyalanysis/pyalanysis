[tool.poetry]
name = "pyalanysis"
version = "0.1.0"
description = ""
authors = ["Anton Bossenbroek <anton.bossenbroek@gmail.com>"]

[tool.poetry.dependencies]
python = ">=3.8,<3.9"
MechanicalSoup = "^1.1.0"
urllib3 = "^1.26.8"
mock = "^4.0.3"
responses = "^0.19.0"
pytest-dependency = "^0.5.1"
rioxarray = "^0.10.2"
pandas = "^1.4.1"
dask = "^2022.5.0"

[tool.poetry.group.dev.dependencies]
pandas-stubs = "^1.5.3.230203"
pytest = "^7.2.1"
pytest-cov = "^4.0.0"
pytest-dependency = "^0.5.1"
pytest-mock = "^3.10.0"
typeguard = "^2.13.3"
codecov = "^2.1.12"
flake8 = "^4.0.1"
mypy = "^0.940"
coverage = "^6.3.2"
black = "^22.1.0"
flake8-bandit = "^3.0.0"
flake8-black = "^0.3.2"
flake8-bugbear = "^22.1.11"
flake8-import-order = "^0.18.1"
requests-mock = "^1.9.3"
responses = "^0.19.0"
mock = "^4.0.3"
types-requests = "^2.28.11.12"


[build-system]
requires = ["poetry-core>=1.4.0"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["pyanalysis"]

[tool.coverage.report]
show_missing = true
fail_under = 70

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true

[tool.pytest.ini_options]
filterwarnings = [
    # "error",
    "ignore::UserWarning",
    # note the use of single quote below to denote "raw" strings in TOML
    # 'ignore:function ham\(\) is deprecated:DeprecationWarning',
]

[tool.ruff]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    # "I",  # isort
    "C4",   # flake8-comprehensions
    "B",    # flake8-bugbear
    "D",    # flake8-docstrings
    "N",    # pep8-naming
    "YTT",  # flake8-2020
    "ANN",  # flake8-annotations
    "G",    # flake8-logging-format
    "PT",   # flake8-pytest-style
    "RET",  # flake8-return
    "SIM",  # flake8-simplify
    "TCH",  # flake8-type-checking
    "TRY",  # tryceratops
    "UP",   # pyupgrade
    "C90",  # mccabe
    "PD",   # pandas-vet
]

ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "D203",  # 1 blank line required before class docstring
    "D213",  # Multi-line docstring summary should start at the second line
    "TCH002", # Move third-party import `pandas` into a type-checking block
    "TRY003", # Avoid specifying long messages outside the exception class
    "D401",  # First line should be in imperative mood
]

# Assume Python 3.10.
target-version = "py310"

[tool.ruff.pydocstyle]
convention = "google"  # Or "numpy", or "pep257"
